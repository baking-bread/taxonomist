name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.2

      - name: Install dependencies
        run: go mod download

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "cyclonedx"
          exit-code: "1"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"
          output: "sbom.cdx.json"

      - name: Lint
        run: |
          go vet ./...
          golangci-lint run

      - name: Test
        run: |
          go test -v ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: |
            sbom.cdx.json

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: windows
            artifact_name: taxonomist.exe
            goos: windows
            goarch: amd64
          - os: linux
            artifact_name: taxonomist
            goos: linux
            goarch: amd64
          - os: darwin
            artifact_name: taxonomist
            goos: darwin
            goarch: amd64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.2

      - name: Build for ${{ matrix.os }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p bin
          go build -o bin/${{ matrix.artifact_name }} main.go
          cd bin && sha256sum ${{ matrix.artifact_name }} > ${{ matrix.artifact_name }}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: taxonomist-${{ matrix.os }}
          path: |
            bin/${{ matrix.artifact_name }}
            bin/${{ matrix.artifact_name }}.sha256

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/taxonomist-windows/*
            dist/taxonomist-linux/*
            dist/taxonomist-darwin/*
          generate_release_notes: true
